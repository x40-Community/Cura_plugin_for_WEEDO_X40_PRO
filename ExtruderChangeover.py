# Copyright (c) 2023 X40-Community
# Cura is released under the terms of the LGPLv3 or higher.
# Change-over Plugin Rev. 1.0.0 for Ultimaker Cura 5.X
# 
#Last changes:
# 

import platform
from UM.Application import Application
from UM.Logger import Logger
from PyQt6.QtCore import QByteArray, QIODevice, QBuffer

from ..Script import Script
from UM.i18n import i18nCatalog # Translation
i18n_catalog = i18nCatalog("cura")

class ExtruderChangeover(Script):
    def __init__(self):
        super().__init__()


    def getSettingDataString(self):
        return """{
            "name": "Extruder change-over Plugin",
            "key": "Change-over",
            "metadata": {},
            "version": 2,
            "settings":
            {
                 "changeover_to": 
                {
                    "label": "Change-over to",
                    "description": "Select target Extruder for change-over function",
                    "type": "enum",
                    "options": {"lh_ext": "left Extruder", "rh_ext": "right Extruder"},
                    "default_value": "rh_ext"
                },
                  "layer_number":
                {
                    "label": "Change-over after layernumber",
                    "description": "Printer change over after layernumber",
                    "unit": "",
                    "type": "str",
                    "default_value": "10",
                    "minimum_value": "1"
                },
                  "cooldown_extruder":
                {
                    "label": "Cooldown unused Extruder",
                    "description": "Activate this function to cooldown the unused Extruder alter change-over",
                    "type": "bool",
                    "default_value": true
                }                      
                
                
            }
        }"""


    def execute(self, data): 
        changeover_to = self.getSettingValueByKey("changeover_to")
        layer_number = self.getSettingValueByKey("layer_number")
        cooldown_extruder = self.getSettingValueByKey("cooldown_extruder")
        
        
        if cooldown_extruder:  
            cooldown_command = "S1 "
        else:
            cooldown_command = "S0 "

        if self.getSettingValueByKey("changeover_to") == "lh_ext":              
           tool_command = "T0 "
        else:              
           tool_command = "T1 "
           
        if layer_number:
            insert_command = "M924 " + cooldown_command + tool_command + ";Change-over to defined Extruder generated by Change-over Plugin\n"

            layer_targets = layer_number.split(",")
            if len(layer_targets) > 0:
                for layer_num in layer_targets:
                    try:
                        layer_num = int(layer_num.strip()) + 1 
                    except ValueError: 
                        continue
                    if 0 < layer_num < len(data):
                        data[layer_num] = insert_command + data[layer_num]



        if platform.system() == 'Linux' or platform.system() == 'Darwin':     
            for layer in data:
                layer_index = data.index(layer)
                # convert Windows lineendings (\r\n) and Mac lineendings (\r) to Linux lineendings (\n)
                # split each line based on the lineending
                lines = data[layer_index].replace("\r\n", "\n").replace("\r", "\n").split("\n")
                
                # convert all lines to use the Windows linenedings
                # the X40 Display has a bug where it can only parse those...
                final_lines = "\r\n".join(lines)
                
                # replace the old layer data with the new layer data
                # including the snapshot and fixed line endings
                data[layer_index] = final_lines

        return data
